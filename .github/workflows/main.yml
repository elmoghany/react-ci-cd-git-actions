name: React-expo-CI-CD
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  setting-up:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.10.0'

    - name: Install Turtle CLI
      run: npm install -g turtle-cli

    - name: install expo
      run: npm install expo

    - name: install expo dependencies
      run: npx expo install react-dom react-native-web @expo/webpack-config

    - name: Prebuild ANDROID expo project 
      run: npx expo prebuild --platform android

    - name: eject from expo
      run: expo eject

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install dependencies
      run: npm install

    - name: Install Android SDK
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip -d android-sdk
        echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/android-sdk/cmdline-tools/bin" >> $GITHUB_PATH
        yes | cmdline-tools/bin/sdkmanager --licenses
        cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    - name: Build APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleRelease

      #   - name: Setup Android Keystore
      # env:
      #   KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      #   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      #   KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      # run: |
      #   echo $KEYSTORE_BASE64 | base64 --decode > ./my-release-key.keystore

    # - name: Build APK
    #   run: |
    #     turtle build:android \
    #       --keystore-path ./my-release-key.keystore \
    #       --keystore-alias $KEY_ALIAS \
    #       --keystore-password $KEYSTORE_PASSWORD \
    #       --type apk \
    #       --allow-non-https-public-url \
    #       -o .

    # - name: list the files
    #   run: ls -ltr android/app
      
    # # Deploy to S3
    # - name: Deploy to S3
    #   run: |
    #     aws s3 cp path/to/generated/apk/ s3://moghany-vprofile-kops-state/react-cicd-apk/ --recursive
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
    #     AWS_REGION: 'us-east-1'

    # - name: Upload Artifacts
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: my-react-expo-cicd-files
    #     path: my-cicd-files

    #you can also use these flags in the following compile cmd --variant debug or --variant release
#    - name: Build for android
#      run: npx expo run:ios --no-build-cache
